# Gitlab CI yml file

# This is the major part of the code which explains the stages present in our pipeline.
# In a django application we have various stages which include testing, packing the code,
# performing migrations, collecting static files and running the application.
# The various stages are broadly classified into 3 main categories:

# 1. Test       2. Release      3. Deploy

stages:
- test
- release
- deploy

variables:
  OMIT_COVERAGE: '*/tests/*,*/tests.py,*/migrations/*,*/urls.py,*/settings.py,*/wsgi.py,manage.py'

# Stage I
# Testing Phase:
# This is where the main code is tested.
# Other options like code coverage, etc are also written in this phase
unit_test:
  stage: test
  # This repo includes python3, pip3
  image: python:3-alpine
  before_script:
    - apk add --no-cache git
    # install requiriment to hubcare_api
    - pip install -r hubcare/hubcare_api/requirements.txt
    - python hubcare/hubcare_api/manage.py makemigrations
    - python hubcare/hubcare_api/manage.py migrate
    # install requiriment to commit metrics
    - pip install -r hubcare/metrics/commit_metrics/requirements.txt
    - python hubcare/metrics/commit_metrics/manage.py makemigrations
    - python hubcare/metrics/commit_metrics/manage.py migrate
    # install requiriment to community metrics
    - pip install -r hubcare/metrics/community_metrics/requirements.txt
    - python hubcare/metrics/community_metrics/manage.py makemigrations
    - python hubcare/metrics/community_metrics/manage.py migrate
    # install requiriment to issue metrics
    - pip install -r hubcare/metrics/issue_metrics/requirements.txt
    - python hubcare/metrics/issue_metrics/manage.py makemigrations
    - python hubcare/metrics/issue_metrics/manage.py migrate
    # install requiriment to pull_request metrics
    - pip install -r hubcare/metrics/pull_request_metrics/requirements.txt
    - python hubcare/metrics/pull_request_metrics/manage.py makemigrations
    - python hubcare/metrics/pull_request_metrics/manage.py migrate
  script:
    # Command to test our application
    - coverage run --source='.' --omit=$OMIT_COVERAGE hubcare/hubcare_api/manage.py test hubcare/hubcare_api/
    - coverage run --source='.' --omit=$OMIT_COVERAGE --append hubcare/metrics/commit_metrics/manage.py test hubcare/metrics/commit_metrics/
    - coverage run --source='.' --omit=$OMIT_COVERAGE --append hubcare/metrics/community_metrics/manage.py test hubcare/metrics/community_metrics/
    - coverage run --source='.' --omit=$OMIT_COVERAGE --append hubcare/metrics/issue_metrics/manage.py test hubcare/metrics/issue_metrics/
    - coverage run --source='.' --omit=$OMIT_COVERAGE --append hubcare/metrics/pull_request_metrics/manage.py test hubcare/metrics/pull_request_metrics/
    - coverage report
    - coveralls

codestyle:
  stage: test
  # This repo includes python3, pip3
  image: python:3-alpine
  before_script:
    - pip install pycodestyle
  script:
    - pycodestyle .

# Stage II
# Release Phase
# In this phase, we package our code using docker
.release:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  script:
    # Build our image using docker
    - docker build $IMAGEPATH -t registry.gitlab.com/cjjcastro/2019-1-hubcare-api/$DOCKERIMAGE:$DOCKERTAG

    # Configure container registry to push using docker
    - docker login -u "$DOCKERLOGIN" -p "$DOCKERPASSWORD" registry.gitlab.com

    # Push the image using docker
    - docker push registry.gitlab.com/cjjcastro/2019-1-hubcare-api/$DOCKERIMAGE:$DOCKERTAG

    # The tag, only master indicates that whenever code is pushed to master branch,
    # only then run the pipeline

# Release to hubcare api service
release_hubcare_api_production:
  extends: .release
  environment: production_hubcare_api
  only:
    - master

release_hubcare_api_development:
  extends: .release
  environment: development_hubcare_api
  only: 
    - devel

# Release to commit metrics service
release_commit_metrics_production:
  extends: .release
  environment: production_commit_metrics
  only: 
    - master

release_commit_metrics_development:
  extends: .release
  environment: development_commit_metrics
  only: 
    - devel

# Release to community metrics service
release_community_metrics_production:
  extends: .release
  environment: production_community_metrics
  only: 
    - master

release_community_metrics_development:
  extends: .release
  environment: development_community_metrics
  only: 
    - devel

# Release to issue metrics service
release_issue_metrics_production:
  extends: .release
  environment: production_issue_metrics
  only: 
    - master

release_issue_metrics_development:
  extends: .release
  environment: development_issue_metrics
  only: 
    - devel

# Release to pull request metrics service
release_pull_request_metrics_production:
  extends: .release
  environment: production_pull_request_metrics
  only: 
    - master

release_pull_request_metrics_development:
  extends: .release
  environment: development_pull_request_metrics
  only: 
    - devel

# Stage III - I
# Deployment Phase
# Production deploy
deploy_hubcare_api:
  image: cdrx/rancher-gitlab-deploy
  stage: deploy
  script:
    - "upgrade
            --rancher-url $RANCHER_URL
            --rancher-key $RANCHER_ACCESS_KEY
            --rancher-secret $RANCHER_SECRET_KEY
            --environment $RANCHER_ENVIRONMENT
            --stack $RANCHER_STACK
            --service hubcare-api"
  only:
    - master

deploy_commit_metrics:
  image: cdrx/rancher-gitlab-deploy
  stage: deploy
  script:
    - "upgrade
            --rancher-url $RANCHER_URL
            --rancher-key $RANCHER_ACCESS_KEY
            --rancher-secret $RANCHER_SECRET_KEY
            --environment $RANCHER_ENVIRONMENT
            --stack $RANCHER_STACK
            --service commit_metrics"
  only:
    - master

deploy_community_metrics:
  image: cdrx/rancher-gitlab-deploy
  stage: deploy
  script:
    - "upgrade
            --rancher-url $RANCHER_URL
            --rancher-key $RANCHER_ACCESS_KEY
            --rancher-secret $RANCHER_SECRET_KEY
            --environment $RANCHER_ENVIRONMENT
            --stack $RANCHER_STACK
            --service community_metrics"
  only:
    - master

deploy_issue_metrics:
  image: cdrx/rancher-gitlab-deploy
  stage: deploy
  script:
    - "upgrade
            --rancher-url $RANCHER_URL
            --rancher-key $RANCHER_ACCESS_KEY
            --rancher-secret $RANCHER_SECRET_KEY
            --environment $RANCHER_ENVIRONMENT
            --stack $RANCHER_STACK
            --service issue_metrics"
  only:
    - master

deploy_pull_request_metrics:
  image: cdrx/rancher-gitlab-deploy
  stage: deploy
  script:
    - "upgrade
            --rancher-url $RANCHER_URL
            --rancher-key $RANCHER_ACCESS_KEY
            --rancher-secret $RANCHER_SECRET_KEY
            --environment $RANCHER_ENVIRONMENT
            --stack $RANCHER_STACK
            --service pull_request_metrics"
  only:
    - master

# Development deploy in Heroku
deploy_hubcare_api_dev:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull registry.gitlab.com/cjjcastro/2019-1-hubcare-api/hubcare_api:latest
    - docker tag registry.gitlab.com/cjjcastro/2019-1-hubcare-api/hubcare_api:latest registry.heroku.com/hubcare-api/web:latest
    - docker push registry.heroku.com/hubcare-api/web:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app hubcare-api
  tags:
    - docker
  only:
    - devel

deploy_commit_metrics_dev:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull registry.gitlab.com/cjjcastro/2019-1-hubcare-api/commit_metrics:latest
    - docker tag registry.gitlab.com/cjjcastro/2019-1-hubcare-api/commit_metrics:latest registry.heroku.com/hubcare-commit-metrics/web:latest
    - docker push registry.heroku.com/hubcare-commit-metrics/web:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app hubcare-commit-metrics
  tags:
    - docker
  only:
    - devel

deploy_community_metrics_dev:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull registry.gitlab.com/cjjcastro/2019-1-hubcare-api/community_metrics:latest
    - docker tag registry.gitlab.com/cjjcastro/2019-1-hubcare-api/community_metrics:latest registry.heroku.com/hubcare-community-metrics/web:latest
    - docker push registry.heroku.com/hubcare-community-metrics/web:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app hubcare-community-metrics
  tags:
    - docker
  only:
    - devel

deploy_issue_metrics_dev:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull registry.gitlab.com/cjjcastro/2019-1-hubcare-api/issue_metric:latest
    - docker tag registry.gitlab.com/cjjcastro/2019-1-hubcare-api/issue_metric:latest registry.heroku.com/hubcare-issue-metrics/web:latest
    - docker push registry.heroku.com/hubcare-issue-metrics/web:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app hubcare-issue-metrics
  tags:
    - docker
  only:
    - devel

deploy_pull_request_metrics_metrics_dev:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
    - docker pull registry.gitlab.com/cjjcastro/2019-1-hubcare-api/pull_request_metrics:latest
    - docker tag registry.gitlab.com/cjjcastro/2019-1-hubcare-api/pull_request_metrics:latest registry.heroku.com/hubcare-pull-request-metrics/web:latest
    - docker push registry.heroku.com/hubcare-pull-request-metrics/web:latest
    - docker run --rm -e HEROKU_API_KEY=$HEROKU_API_KEY wingrunr21/alpine-heroku-cli container:release web --app hubcare-pull-request-metrics
  tags:
    - docker
  only:
    - devel
